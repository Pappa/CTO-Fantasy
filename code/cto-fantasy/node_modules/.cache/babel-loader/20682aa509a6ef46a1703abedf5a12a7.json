{"ast":null,"code":"import Phaser from \"phaser\";\nimport { Button } from \"./Button\";\nimport * as theme from \"../theme\";\nexport class Card extends Phaser.GameObjects.Container {\n  constructor(scene, x = 0, y = 0, content, callback) {\n    super(scene, x, y);\n    this.form = this.scene.add.dom(300, 400).createFromCache(\"vacancy\");\n    this.form.setOrigin(0.5);\n    this.form.setPerspective(800);\n    this.form.addListener(\"click\"); //this.form.on(\"onload\", () => {\n\n    console.log(\"onload\");\n    const name = this.form.getChildByName(\"company-name\");\n    const description = this.form.getChildByName(\"company-description\");\n    const submit = this.form.getChildByName(\"submit\"); //TODO: figure out solution to race condition here\n    //name is null briefly\n\n    name.setText(this.company.name);\n    description.setText(this.company.description);\n    submit.setText(\"Accept Job Offer\"); //});\n    // console.log(\"name\", name);\n\n    this.setSize(100, 150);\n    this.card = this.scene.add.image(0, 0, \"card\").setOrigin(0.5, 0);\n    this.createText(content);\n    this.add([this.card, this.title, this.text]);\n\n    if (callback) {\n      this.createButton(content, callback);\n    }\n\n    this.scene.add.existing(this);\n  }\n\n  createText(content) {\n    this.title = this.scene.add.text(0, 15, content.title, theme.cardTitle).setOrigin(0.5, 0);\n    this.text = this.scene.add.text(0, 40, content.text, theme.cardText).setOrigin(0.5, 0);\n  }\n\n  createButton(content, callback) {\n    this.button = this.scene.add.existing(new Button(this.scene, 0, 155, content, callback));\n    this.add(this.button);\n  }\n\n}","map":{"version":3,"sources":["/Users/robhill/Projects/Pappa/cto-fantasy/src/modules/game/cto-fantasy/game-objects/Card.js"],"names":["Phaser","Button","theme","Card","GameObjects","Container","constructor","scene","x","y","content","callback","form","add","dom","createFromCache","setOrigin","setPerspective","addListener","console","log","name","getChildByName","description","submit","setText","company","setSize","card","image","createText","title","text","createButton","existing","cardTitle","cardText","button"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,IAAN,SAAmBH,MAAM,CAACI,WAAP,CAAmBC,SAAtC,CAAgD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,CAAC,GAAG,CAAZ,EAAeC,CAAC,GAAG,CAAnB,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AAClD,UAAMJ,KAAN,EAAaC,CAAb,EAAgBC,CAAhB;AAEA,SAAKG,IAAL,GAAY,KAAKL,KAAL,CAAWM,GAAX,CAAeC,GAAf,CAAmB,GAAnB,EAAwB,GAAxB,EAA6BC,eAA7B,CAA6C,SAA7C,CAAZ;AACA,SAAKH,IAAL,CAAUI,SAAV,CAAoB,GAApB;AACA,SAAKJ,IAAL,CAAUK,cAAV,CAAyB,GAAzB;AACA,SAAKL,IAAL,CAAUM,WAAV,CAAsB,OAAtB,EANkD,CAOlD;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMC,IAAI,GAAG,KAAKT,IAAL,CAAUU,cAAV,CAAyB,cAAzB,CAAb;AACA,UAAMC,WAAW,GAAG,KAAKX,IAAL,CAAUU,cAAV,CAAyB,qBAAzB,CAApB;AACA,UAAME,MAAM,GAAG,KAAKZ,IAAL,CAAUU,cAAV,CAAyB,QAAzB,CAAf,CAXkD,CAalD;AACA;;AACAD,IAAAA,IAAI,CAACI,OAAL,CAAa,KAAKC,OAAL,CAAaL,IAA1B;AACAE,IAAAA,WAAW,CAACE,OAAZ,CAAoB,KAAKC,OAAL,CAAaH,WAAjC;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAe,kBAAf,EAjBkD,CAkBlD;AAEA;;AACA,SAAKE,OAAL,CAAa,GAAb,EAAkB,GAAlB;AAEA,SAAKC,IAAL,GAAY,KAAKrB,KAAL,CAAWM,GAAX,CAAegB,KAAf,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,MAA3B,EAAmCb,SAAnC,CAA6C,GAA7C,EAAkD,CAAlD,CAAZ;AAEA,SAAKc,UAAL,CAAgBpB,OAAhB;AACA,SAAKG,GAAL,CAAS,CAAC,KAAKe,IAAN,EAAY,KAAKG,KAAjB,EAAwB,KAAKC,IAA7B,CAAT;;AAEA,QAAIrB,QAAJ,EAAc;AACZ,WAAKsB,YAAL,CAAkBvB,OAAlB,EAA2BC,QAA3B;AACD;;AAED,SAAKJ,KAAL,CAAWM,GAAX,CAAeqB,QAAf,CAAwB,IAAxB;AACD;;AAEDJ,EAAAA,UAAU,CAACpB,OAAD,EAAU;AAClB,SAAKqB,KAAL,GAAa,KAAKxB,KAAL,CAAWM,GAAX,CACVmB,IADU,CACL,CADK,EACF,EADE,EACEtB,OAAO,CAACqB,KADV,EACiB7B,KAAK,CAACiC,SADvB,EAEVnB,SAFU,CAEA,GAFA,EAEK,CAFL,CAAb;AAGA,SAAKgB,IAAL,GAAY,KAAKzB,KAAL,CAAWM,GAAX,CACTmB,IADS,CACJ,CADI,EACD,EADC,EACGtB,OAAO,CAACsB,IADX,EACiB9B,KAAK,CAACkC,QADvB,EAETpB,SAFS,CAEC,GAFD,EAEM,CAFN,CAAZ;AAGD;;AAEDiB,EAAAA,YAAY,CAACvB,OAAD,EAAUC,QAAV,EAAoB;AAC9B,SAAK0B,MAAL,GAAc,KAAK9B,KAAL,CAAWM,GAAX,CAAeqB,QAAf,CACZ,IAAIjC,MAAJ,CAAW,KAAKM,KAAhB,EAAuB,CAAvB,EAA0B,GAA1B,EAA+BG,OAA/B,EAAwCC,QAAxC,CADY,CAAd;AAGA,SAAKE,GAAL,CAAS,KAAKwB,MAAd;AACD;;AAlDoD","sourcesContent":["import Phaser from \"phaser\";\nimport { Button } from \"./Button\";\nimport * as theme from \"../theme\";\n\nexport class Card extends Phaser.GameObjects.Container {\n  constructor(scene, x = 0, y = 0, content, callback) {\n    super(scene, x, y);\n\n    this.form = this.scene.add.dom(300, 400).createFromCache(\"vacancy\");\n    this.form.setOrigin(0.5);\n    this.form.setPerspective(800);\n    this.form.addListener(\"click\");\n    //this.form.on(\"onload\", () => {\n    console.log(\"onload\");\n    const name = this.form.getChildByName(\"company-name\");\n    const description = this.form.getChildByName(\"company-description\");\n    const submit = this.form.getChildByName(\"submit\");\n\n    //TODO: figure out solution to race condition here\n    //name is null briefly\n    name.setText(this.company.name);\n    description.setText(this.company.description);\n    submit.setText(\"Accept Job Offer\");\n    //});\n\n    // console.log(\"name\", name);\n    this.setSize(100, 150);\n\n    this.card = this.scene.add.image(0, 0, \"card\").setOrigin(0.5, 0);\n\n    this.createText(content);\n    this.add([this.card, this.title, this.text]);\n\n    if (callback) {\n      this.createButton(content, callback);\n    }\n\n    this.scene.add.existing(this);\n  }\n\n  createText(content) {\n    this.title = this.scene.add\n      .text(0, 15, content.title, theme.cardTitle)\n      .setOrigin(0.5, 0);\n    this.text = this.scene.add\n      .text(0, 40, content.text, theme.cardText)\n      .setOrigin(0.5, 0);\n  }\n\n  createButton(content, callback) {\n    this.button = this.scene.add.existing(\n      new Button(this.scene, 0, 155, content, callback)\n    );\n    this.add(this.button);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}