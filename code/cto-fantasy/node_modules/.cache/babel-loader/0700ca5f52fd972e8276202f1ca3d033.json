{"ast":null,"code":"export class Employee {\n  // ethnicity; // how about introducing a \"diversity\" attribute based on ethnic/gender diversity in the team?\n  constructor(skill, gender) {\n    this.skill = 0;\n    this.skill = skill || this.randomiseSkill();\n    this.gender = gender || this.randomiseGender();\n  }\n\n  randomiseSkill() {\n    const min = 1;\n    const max = 10;\n    return Math.floor(Math.random() * (max - min + 1) + min) / 10;\n  }\n\n  randomiseGender() {\n    return Math.random() <= 0.7 ? Employee.MALE : Employee.FEMALE;\n  }\n\n}\nEmployee.MALE = \"m\";\nEmployee.FEMALE = \"f\";\nexport class Dev extends Employee {}\nexport class Tester extends Employee {}\nexport class ScrumMaster extends Employee {}\nexport class ProductOwner extends Employee {}","map":{"version":3,"sources":["/Users/robhill/Projects/Pappa/cto-fantasy/src/modules/game/cto-fantasy/classes/Employee.js"],"names":["Employee","constructor","skill","gender","randomiseSkill","randomiseGender","min","max","Math","floor","random","MALE","FEMALE","Dev","Tester","ScrumMaster","ProductOwner"],"mappings":"AAAA,OAAO,MAAMA,QAAN,CAAe;AAGpB;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAAA,SAH3BD,KAG2B,GAHnB,CAGmB;AACzB,SAAKA,KAAL,GAAaA,KAAK,IAAI,KAAKE,cAAL,EAAtB;AACA,SAAKD,MAAL,GAAcA,MAAM,IAAI,KAAKE,eAAL,EAAxB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,UAAME,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,IAAoD,EAA3D;AACD;;AAEDD,EAAAA,eAAe,GAAG;AAChB,WAAOG,IAAI,CAACE,MAAL,MAAiB,GAAjB,GAAuBV,QAAQ,CAACW,IAAhC,GAAuCX,QAAQ,CAACY,MAAvD;AACD;;AAjBmB;AAoBtBZ,QAAQ,CAACW,IAAT,GAAgB,GAAhB;AACAX,QAAQ,CAACY,MAAT,GAAkB,GAAlB;AAEA,OAAO,MAAMC,GAAN,SAAkBb,QAAlB,CAA2B;AAElC,OAAO,MAAMc,MAAN,SAAqBd,QAArB,CAA8B;AAErC,OAAO,MAAMe,WAAN,SAA0Bf,QAA1B,CAAmC;AAE1C,OAAO,MAAMgB,YAAN,SAA2BhB,QAA3B,CAAoC","sourcesContent":["export class Employee {\n  skill = 0;\n  gender;\n  // ethnicity; // how about introducing a \"diversity\" attribute based on ethnic/gender diversity in the team?\n  constructor(skill, gender) {\n    this.skill = skill || this.randomiseSkill();\n    this.gender = gender || this.randomiseGender();\n  }\n\n  randomiseSkill() {\n    const min = 1;\n    const max = 10;\n    return Math.floor(Math.random() * (max - min + 1) + min) / 10;\n  }\n\n  randomiseGender() {\n    return Math.random() <= 0.7 ? Employee.MALE : Employee.FEMALE;\n  }\n}\n\nEmployee.MALE = \"m\";\nEmployee.FEMALE = \"f\";\n\nexport class Dev extends Employee {}\n\nexport class Tester extends Employee {}\n\nexport class ScrumMaster extends Employee {}\n\nexport class ProductOwner extends Employee {}\n"]},"metadata":{},"sourceType":"module"}