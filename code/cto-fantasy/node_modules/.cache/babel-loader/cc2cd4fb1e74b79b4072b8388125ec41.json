{"ast":null,"code":"import Phaser from \"phaser\";\nimport { Button } from \"./Button\";\nimport * as theme from \"../theme\";\nexport class Card extends Phaser.GameObjects.Container {\n  constructor(scene, x = 0, y = 0, content, callback) {\n    super(scene, x, y); // console.log(\"CompanyMenu:preload\");\n\n    this.form = this.scene.add.dom(300, 400).createFromCache(\"vacancy\"); // this.form.setOrigin(0.5);\n    // this.form.setPerspective(800);\n    // this.form.addListener(\"click\");\n    // console.log(\"CompanyMenu:create\");\n\n    const name = this.form.getChildByName(\"company-name\");\n    name.value = this.company.name; // const description = this.form.getChildByName(\"company-description\");\n    // const submit = this.form.getChildByName(\"submit\");\n    // TODO: figure out solution to race condition here\n    // name is null briefly\n    // name.setText(this.company.name);\n    // description.setText(this.company.description);\n    // submit.setText(\"Accept Job Offer\");\n    // console.log(\"name\", name);\n\n    this.setSize(100, 150);\n    this.card = this.scene.add.image(0, 0, \"card\").setOrigin(0.5, 0);\n    this.createText(content);\n    this.add([this.card, this.title, this.text]);\n\n    if (callback) {\n      this.createButton(content, callback);\n    }\n\n    this.scene.add.existing(this);\n  }\n\n  createText(content) {\n    this.title = this.scene.add.text(0, 15, content.title, theme.cardTitle).setOrigin(0.5, 0);\n    this.text = this.scene.add.text(0, 40, content.text, theme.cardText).setOrigin(0.5, 0);\n  }\n\n  createButton(content, callback) {\n    this.button = this.scene.add.existing(new Button(this.scene, 0, 155, content, callback));\n    this.add(this.button);\n  }\n\n}","map":{"version":3,"sources":["/Users/robhill/Projects/Pappa/cto-fantasy/src/modules/game/cto-fantasy/game-objects/Card.js"],"names":["Phaser","Button","theme","Card","GameObjects","Container","constructor","scene","x","y","content","callback","form","add","dom","createFromCache","name","getChildByName","value","company","setSize","card","image","setOrigin","createText","title","text","createButton","existing","cardTitle","cardText","button"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,IAAN,SAAmBH,MAAM,CAACI,WAAP,CAAmBC,SAAtC,CAAgD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,CAAC,GAAG,CAAZ,EAAeC,CAAC,GAAG,CAAnB,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AAClD,UAAMJ,KAAN,EAAaC,CAAb,EAAgBC,CAAhB,EADkD,CAGlD;;AACA,SAAKG,IAAL,GAAY,KAAKL,KAAL,CAAWM,GAAX,CAAeC,GAAf,CAAmB,GAAnB,EAAwB,GAAxB,EAA6BC,eAA7B,CAA6C,SAA7C,CAAZ,CAJkD,CAKlD;AACA;AACA;AAEA;;AACA,UAAMC,IAAI,GAAG,KAAKJ,IAAL,CAAUK,cAAV,CAAyB,cAAzB,CAAb;AACAD,IAAAA,IAAI,CAACE,KAAL,GAAa,KAAKC,OAAL,CAAaH,IAA1B,CAXkD,CAYlD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,SAAKI,OAAL,CAAa,GAAb,EAAkB,GAAlB;AAEA,SAAKC,IAAL,GAAY,KAAKd,KAAL,CAAWM,GAAX,CAAeS,KAAf,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,MAA3B,EAAmCC,SAAnC,CAA6C,GAA7C,EAAkD,CAAlD,CAAZ;AAEA,SAAKC,UAAL,CAAgBd,OAAhB;AACA,SAAKG,GAAL,CAAS,CAAC,KAAKQ,IAAN,EAAY,KAAKI,KAAjB,EAAwB,KAAKC,IAA7B,CAAT;;AAEA,QAAIf,QAAJ,EAAc;AACZ,WAAKgB,YAAL,CAAkBjB,OAAlB,EAA2BC,QAA3B;AACD;;AAED,SAAKJ,KAAL,CAAWM,GAAX,CAAee,QAAf,CAAwB,IAAxB;AACD;;AAEDJ,EAAAA,UAAU,CAACd,OAAD,EAAU;AAClB,SAAKe,KAAL,GAAa,KAAKlB,KAAL,CAAWM,GAAX,CACVa,IADU,CACL,CADK,EACF,EADE,EACEhB,OAAO,CAACe,KADV,EACiBvB,KAAK,CAAC2B,SADvB,EAEVN,SAFU,CAEA,GAFA,EAEK,CAFL,CAAb;AAGA,SAAKG,IAAL,GAAY,KAAKnB,KAAL,CAAWM,GAAX,CACTa,IADS,CACJ,CADI,EACD,EADC,EACGhB,OAAO,CAACgB,IADX,EACiBxB,KAAK,CAAC4B,QADvB,EAETP,SAFS,CAEC,GAFD,EAEM,CAFN,CAAZ;AAGD;;AAEDI,EAAAA,YAAY,CAACjB,OAAD,EAAUC,QAAV,EAAoB;AAC9B,SAAKoB,MAAL,GAAc,KAAKxB,KAAL,CAAWM,GAAX,CAAee,QAAf,CACZ,IAAI3B,MAAJ,CAAW,KAAKM,KAAhB,EAAuB,CAAvB,EAA0B,GAA1B,EAA+BG,OAA/B,EAAwCC,QAAxC,CADY,CAAd;AAGA,SAAKE,GAAL,CAAS,KAAKkB,MAAd;AACD;;AAnDoD","sourcesContent":["import Phaser from \"phaser\";\nimport { Button } from \"./Button\";\nimport * as theme from \"../theme\";\n\nexport class Card extends Phaser.GameObjects.Container {\n  constructor(scene, x = 0, y = 0, content, callback) {\n    super(scene, x, y);\n\n    // console.log(\"CompanyMenu:preload\");\n    this.form = this.scene.add.dom(300, 400).createFromCache(\"vacancy\");\n    // this.form.setOrigin(0.5);\n    // this.form.setPerspective(800);\n    // this.form.addListener(\"click\");\n\n    // console.log(\"CompanyMenu:create\");\n    const name = this.form.getChildByName(\"company-name\");\n    name.value = this.company.name;\n    // const description = this.form.getChildByName(\"company-description\");\n    // const submit = this.form.getChildByName(\"submit\");\n\n    // TODO: figure out solution to race condition here\n    // name is null briefly\n    // name.setText(this.company.name);\n    // description.setText(this.company.description);\n    // submit.setText(\"Accept Job Offer\");\n\n    // console.log(\"name\", name);\n    this.setSize(100, 150);\n\n    this.card = this.scene.add.image(0, 0, \"card\").setOrigin(0.5, 0);\n\n    this.createText(content);\n    this.add([this.card, this.title, this.text]);\n\n    if (callback) {\n      this.createButton(content, callback);\n    }\n\n    this.scene.add.existing(this);\n  }\n\n  createText(content) {\n    this.title = this.scene.add\n      .text(0, 15, content.title, theme.cardTitle)\n      .setOrigin(0.5, 0);\n    this.text = this.scene.add\n      .text(0, 40, content.text, theme.cardText)\n      .setOrigin(0.5, 0);\n  }\n\n  createButton(content, callback) {\n    this.button = this.scene.add.existing(\n      new Button(this.scene, 0, 155, content, callback)\n    );\n    this.add(this.button);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}