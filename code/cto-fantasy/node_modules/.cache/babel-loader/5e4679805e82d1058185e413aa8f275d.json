{"ast":null,"code":"import Phaser from \"phaser\";\nimport { Card } from \"../game-objects/Card\";\nimport * as theme from \"../theme\";\nexport class HiringScene extends Phaser.Scene {\n  constructor() {\n    super(\"HiringScene\");\n    this.intro = true;\n  }\n\n  init() {}\n\n  preload() {}\n\n  create({\n    candidates,\n    onClose\n  }) {\n    this.candidates = candidates;\n    this.onClose = onClose;\n    this.createComponents();\n    this.updateCandidates();\n  }\n\n  update(time, delta) {}\n\n  createComponents() {\n    this.header = this.add.text(400, 15, \" \", theme.h1).setOrigin(0.5, 0);\n    this.close = this.add.text(780, 10, \"X\", theme.x).setOrigin(0).setInteractive({\n      useHandCursor: true\n    }).on(\"pointerup\", () => {\n      this.onClose();\n    });\n  }\n\n  updateCandidates() {\n    this.header.setText(`There are ${this.candidates.length} candidates.`);\n    this.candidatesCards = this.candidates.map((candidate, idx) => {\n      const x = -50 + (idx + 1) * 175;\n      return this.add.existing(new Card(this, x, 150, {\n        title: candidate.name,\n        text: candidate.type\n      }, this.selectCandidate.bind(this, candidate)));\n    }, this);\n  }\n\n  selectCandidate(candidate) {\n    console.log(candidate);\n  }\n\n}","map":{"version":3,"sources":["/Users/robhill/Projects/Pappa/cto-fantasy/src/modules/game/cto-fantasy/scenes/HiringScene.js"],"names":["Phaser","Card","theme","HiringScene","Scene","constructor","intro","init","preload","create","candidates","onClose","createComponents","updateCandidates","update","time","delta","header","add","text","h1","setOrigin","close","x","setInteractive","useHandCursor","on","setText","length","candidatesCards","map","candidate","idx","existing","title","name","type","selectCandidate","bind","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,WAAN,SAA0BH,MAAM,CAACI,KAAjC,CAAuC;AAE5CC,EAAAA,WAAW,GAAG;AACZ,UAAM,aAAN;AADY,SADdC,KACc,GADN,IACM;AAEb;;AAEDC,EAAAA,IAAI,GAAG,CAAE;;AAETC,EAAAA,OAAO,GAAG,CAAE;;AAEZC,EAAAA,MAAM,CAAC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAD,EAA0B;AAC9B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,gBAAL;AACA,SAAKC,gBAAL;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAOC,KAAP,EAAc,CAAE;;AAEtBJ,EAAAA,gBAAgB,GAAG;AACjB,SAAKK,MAAL,GAAc,KAAKC,GAAL,CAASC,IAAT,CAAc,GAAd,EAAmB,EAAnB,EAAuB,GAAvB,EAA4BjB,KAAK,CAACkB,EAAlC,EAAsCC,SAAtC,CAAgD,GAAhD,EAAqD,CAArD,CAAd;AACA,SAAKC,KAAL,GAAa,KAAKJ,GAAL,CACVC,IADU,CACL,GADK,EACA,EADA,EACI,GADJ,EACSjB,KAAK,CAACqB,CADf,EAEVF,SAFU,CAEA,CAFA,EAGVG,cAHU,CAGK;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAHL,EAIVC,EAJU,CAIP,WAJO,EAIM,MAAM;AACrB,WAAKf,OAAL;AACD,KANU,CAAb;AAOD;;AAEDE,EAAAA,gBAAgB,GAAG;AACjB,SAAKI,MAAL,CAAYU,OAAZ,CAAqB,aAAY,KAAKjB,UAAL,CAAgBkB,MAAO,cAAxD;AAEA,SAAKC,eAAL,GAAuB,KAAKnB,UAAL,CAAgBoB,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAC7D,YAAMT,CAAC,GAAG,CAAC,EAAD,GAAM,CAACS,GAAG,GAAG,CAAP,IAAY,GAA5B;AACA,aAAO,KAAKd,GAAL,CAASe,QAAT,CACL,IAAIhC,IAAJ,CACE,IADF,EAEEsB,CAFF,EAGE,GAHF,EAIE;AACEW,QAAAA,KAAK,EAAEH,SAAS,CAACI,IADnB;AAEEhB,QAAAA,IAAI,EAAEY,SAAS,CAACK;AAFlB,OAJF,EAQE,KAAKC,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,EAAgCP,SAAhC,CARF,CADK,CAAP;AAYD,KAdsB,EAcpB,IAdoB,CAAvB;AAeD;;AAEDM,EAAAA,eAAe,CAACN,SAAD,EAAY;AACzBQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACD;;AApD2C","sourcesContent":["import Phaser from \"phaser\";\nimport { Card } from \"../game-objects/Card\";\nimport * as theme from \"../theme\";\n\nexport class HiringScene extends Phaser.Scene {\n  intro = true;\n  constructor() {\n    super(\"HiringScene\");\n  }\n\n  init() {}\n\n  preload() {}\n\n  create({ candidates, onClose }) {\n    this.candidates = candidates;\n    this.onClose = onClose;\n    this.createComponents();\n    this.updateCandidates();\n  }\n\n  update(time, delta) {}\n\n  createComponents() {\n    this.header = this.add.text(400, 15, \" \", theme.h1).setOrigin(0.5, 0);\n    this.close = this.add\n      .text(780, 10, \"X\", theme.x)\n      .setOrigin(0)\n      .setInteractive({ useHandCursor: true })\n      .on(\"pointerup\", () => {\n        this.onClose();\n      });\n  }\n\n  updateCandidates() {\n    this.header.setText(`There are ${this.candidates.length} candidates.`);\n\n    this.candidatesCards = this.candidates.map((candidate, idx) => {\n      const x = -50 + (idx + 1) * 175;\n      return this.add.existing(\n        new Card(\n          this,\n          x,\n          150,\n          {\n            title: candidate.name,\n            text: candidate.type,\n          },\n          this.selectCandidate.bind(this, candidate)\n        )\n      );\n    }, this);\n  }\n\n  selectCandidate(candidate) {\n    console.log(candidate);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}