{"ast":null,"code":"import { State } from \"./State\";\nexport class LinearStateMachine {\n  constructor(delay = 1000) {\n    this.queue = [];\n    this.delay = delay;\n  }\n\n  add(input) {\n    const states = Array.isArray(input) ? input : [input];\n    this.validate(states);\n    this.queue.push(...states);\n  }\n\n  prepend(input) {\n    const states = Array.isArray(input) ? input : [input];\n    this.validate(states);\n    this.queue.unshift(...states);\n  }\n\n  next() {\n    console.log(\"next\");\n    console.log(\"this.currentState\", this.currentState);\n    console.log(\"this.queue\", this.queue);\n\n    if (this.currentState) {\n      this.currentState.exit();\n    }\n\n    this.currentState = this.queue.shift();\n\n    if (this.currentState) {\n      setTimeout(() => {\n        console.log(\"this.currentState\", this.currentState);\n        this.currentState.enter();\n      }, this.currentState.delay || this.delay);\n    }\n  }\n\n  hasNext() {\n    return !!this.currentState;\n  }\n\n  validate(states) {\n    states.forEach(state => {\n      if (!(state instanceof State)) {\n        throw new Error(\"add expects instances of State\");\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/robhill/Projects/Pappa/cto-fantasy/src/modules/game/cto-fantasy/classes/states/LinearStateMachine.js"],"names":["State","LinearStateMachine","constructor","delay","queue","add","input","states","Array","isArray","validate","push","prepend","unshift","next","console","log","currentState","exit","shift","setTimeout","enter","hasNext","forEach","state","Error"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,OAAO,MAAMC,kBAAN,CAAyB;AAG9BC,EAAAA,WAAW,CAACC,KAAK,GAAG,IAAT,EAAe;AAAA,SAF1BC,KAE0B,GAFlB,EAEkB;AACxB,SAAKD,KAAL,GAAaA,KAAb;AACD;;AAEDE,EAAAA,GAAG,CAACC,KAAD,EAAQ;AACT,UAAMC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA9C;AACA,SAAKI,QAAL,CAAcH,MAAd;AACA,SAAKH,KAAL,CAAWO,IAAX,CAAgB,GAAGJ,MAAnB;AACD;;AAEDK,EAAAA,OAAO,CAACN,KAAD,EAAQ;AACb,UAAMC,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA9C;AACA,SAAKI,QAAL,CAAcH,MAAd;AACA,SAAKH,KAAL,CAAWS,OAAX,CAAmB,GAAGN,MAAtB;AACD;;AAEDO,EAAAA,IAAI,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKC,YAAtC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKZ,KAA/B;;AACA,QAAI,KAAKa,YAAT,EAAuB;AACrB,WAAKA,YAAL,CAAkBC,IAAlB;AACD;;AACD,SAAKD,YAAL,GAAoB,KAAKb,KAAL,CAAWe,KAAX,EAApB;;AACA,QAAI,KAAKF,YAAT,EAAuB;AACrBG,MAAAA,UAAU,CAAC,MAAM;AACfL,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKC,YAAtC;AACA,aAAKA,YAAL,CAAkBI,KAAlB;AACD,OAHS,EAGP,KAAKJ,YAAL,CAAkBd,KAAlB,IAA2B,KAAKA,KAHzB,CAAV;AAID;AACF;;AAEDmB,EAAAA,OAAO,GAAG;AACR,WAAO,CAAC,CAAC,KAAKL,YAAd;AACD;;AAEDP,EAAAA,QAAQ,CAACH,MAAD,EAAS;AACfA,IAAAA,MAAM,CAACgB,OAAP,CAAgBC,KAAD,IAAW;AACxB,UAAI,EAAEA,KAAK,YAAYxB,KAAnB,CAAJ,EAA+B;AAC7B,cAAM,IAAIyB,KAAJ,CAAU,gCAAV,CAAN;AACD;AACF,KAJD;AAKD;;AA7C6B","sourcesContent":["import { State } from \"./State\";\n\nexport class LinearStateMachine {\n  queue = [];\n  currentState;\n  constructor(delay = 1000) {\n    this.delay = delay;\n  }\n\n  add(input) {\n    const states = Array.isArray(input) ? input : [input];\n    this.validate(states);\n    this.queue.push(...states);\n  }\n\n  prepend(input) {\n    const states = Array.isArray(input) ? input : [input];\n    this.validate(states);\n    this.queue.unshift(...states);\n  }\n\n  next() {\n    console.log(\"next\");\n    console.log(\"this.currentState\", this.currentState);\n    console.log(\"this.queue\", this.queue);\n    if (this.currentState) {\n      this.currentState.exit();\n    }\n    this.currentState = this.queue.shift();\n    if (this.currentState) {\n      setTimeout(() => {\n        console.log(\"this.currentState\", this.currentState);\n        this.currentState.enter();\n      }, this.currentState.delay || this.delay);\n    }\n  }\n\n  hasNext() {\n    return !!this.currentState;\n  }\n\n  validate(states) {\n    states.forEach((state) => {\n      if (!(state instanceof State)) {\n        throw new Error(\"add expects instances of State\");\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}