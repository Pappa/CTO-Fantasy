{"ast":null,"code":"import { randomInt, randomName } from \"../utils/random\";\nexport class Employee {\n  // ethnicity; // how about introducing a \"diversity\" attribute based on ethnic/gender diversity in the team?\n  constructor({\n    skill,\n    gender,\n    name,\n    salary,\n    happiness\n  }) {\n    this.skill = skill || this.getRandomSkill();\n    this.gender = gender || this.getRandomGender();\n    this.name = name || this.getRandomName();\n    this.salary = salary || this.getRandomSalary();\n    this.happiness = happiness || this.getRandomHappiness();\n  }\n\n  getRandomSkill() {\n    const min = 1;\n    const max = 5;\n    return (randomInt(min, max) + randomInt(min, max)) / 10;\n  }\n\n  getRandomGender() {\n    return Math.random() <= 0.7 ? Employee.MALE : Employee.FEMALE;\n  }\n\n  getRandomName() {\n    return randomName(this.gender);\n  }\n\n  getRandomSalary() {\n    return Math.trunc(randomInt(25000, 50000) / 500) * 500;\n  }\n\n  getRandomHappiness() {\n    const min = 1;\n    const max = 5;\n    return (randomInt(min, max) + randomInt(min, max)) / 10;\n  }\n\n}\nEmployee.MALE = 0;\nEmployee.FEMALE = 1;\nexport class Dev extends Employee {}\nexport class Tester extends Employee {}\nexport class ScrumMaster extends Employee {\n  getRandomSalary() {\n    return super.getRandomSalary() + 10000;\n  }\n\n}\nexport class ProductOwner extends Employee {\n  getRandomSalary() {\n    return super.getRandomSalary() + 10000;\n  }\n\n}","map":{"version":3,"sources":["/Users/robhill/Projects/Pappa/cto-fantasy/src/modules/game/cto-fantasy/classes/Employee.js"],"names":["randomInt","randomName","Employee","constructor","skill","gender","name","salary","happiness","getRandomSkill","getRandomGender","getRandomName","getRandomSalary","getRandomHappiness","min","max","Math","random","MALE","FEMALE","trunc","Dev","Tester","ScrumMaster","ProductOwner"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,iBAAtC;AAEA,OAAO,MAAMC,QAAN,CAAe;AACpB;AACAC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA;AAA/B,GAAD,EAA6C;AACtD,SAAKJ,KAAL,GAAaA,KAAK,IAAI,KAAKK,cAAL,EAAtB;AACA,SAAKJ,MAAL,GAAcA,MAAM,IAAI,KAAKK,eAAL,EAAxB;AACA,SAAKJ,IAAL,GAAYA,IAAI,IAAI,KAAKK,aAAL,EAApB;AACA,SAAKJ,MAAL,GAAcA,MAAM,IAAI,KAAKK,eAAL,EAAxB;AACA,SAAKJ,SAAL,GAAiBA,SAAS,IAAI,KAAKK,kBAAL,EAA9B;AACD;;AAEDJ,EAAAA,cAAc,GAAG;AACf,UAAMK,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA,WAAO,CAACf,SAAS,CAACc,GAAD,EAAMC,GAAN,CAAT,GAAsBf,SAAS,CAACc,GAAD,EAAMC,GAAN,CAAhC,IAA8C,EAArD;AACD;;AAEDL,EAAAA,eAAe,GAAG;AAChB,WAAOM,IAAI,CAACC,MAAL,MAAiB,GAAjB,GAAuBf,QAAQ,CAACgB,IAAhC,GAAuChB,QAAQ,CAACiB,MAAvD;AACD;;AAEDR,EAAAA,aAAa,GAAG;AACd,WAAOV,UAAU,CAAC,KAAKI,MAAN,CAAjB;AACD;;AAEDO,EAAAA,eAAe,GAAG;AAChB,WAAOI,IAAI,CAACI,KAAL,CAAWpB,SAAS,CAAC,KAAD,EAAQ,KAAR,CAAT,GAA0B,GAArC,IAA4C,GAAnD;AACD;;AAEDa,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA,WAAO,CAACf,SAAS,CAACc,GAAD,EAAMC,GAAN,CAAT,GAAsBf,SAAS,CAACc,GAAD,EAAMC,GAAN,CAAhC,IAA8C,EAArD;AACD;;AAhCmB;AAmCtBb,QAAQ,CAACgB,IAAT,GAAgB,CAAhB;AACAhB,QAAQ,CAACiB,MAAT,GAAkB,CAAlB;AAEA,OAAO,MAAME,GAAN,SAAkBnB,QAAlB,CAA2B;AAElC,OAAO,MAAMoB,MAAN,SAAqBpB,QAArB,CAA8B;AAErC,OAAO,MAAMqB,WAAN,SAA0BrB,QAA1B,CAAmC;AACxCU,EAAAA,eAAe,GAAG;AAChB,WAAO,MAAMA,eAAN,KAA0B,KAAjC;AACD;;AAHuC;AAM1C,OAAO,MAAMY,YAAN,SAA2BtB,QAA3B,CAAoC;AACzCU,EAAAA,eAAe,GAAG;AAChB,WAAO,MAAMA,eAAN,KAA0B,KAAjC;AACD;;AAHwC","sourcesContent":["import { randomInt, randomName } from \"../utils/random\";\n\nexport class Employee {\n  // ethnicity; // how about introducing a \"diversity\" attribute based on ethnic/gender diversity in the team?\n  constructor({ skill, gender, name, salary, happiness }) {\n    this.skill = skill || this.getRandomSkill();\n    this.gender = gender || this.getRandomGender();\n    this.name = name || this.getRandomName();\n    this.salary = salary || this.getRandomSalary();\n    this.happiness = happiness || this.getRandomHappiness();\n  }\n\n  getRandomSkill() {\n    const min = 1;\n    const max = 5;\n    return (randomInt(min, max) + randomInt(min, max)) / 10;\n  }\n\n  getRandomGender() {\n    return Math.random() <= 0.7 ? Employee.MALE : Employee.FEMALE;\n  }\n\n  getRandomName() {\n    return randomName(this.gender);\n  }\n\n  getRandomSalary() {\n    return Math.trunc(randomInt(25000, 50000) / 500) * 500;\n  }\n\n  getRandomHappiness() {\n    const min = 1;\n    const max = 5;\n    return (randomInt(min, max) + randomInt(min, max)) / 10;\n  }\n}\n\nEmployee.MALE = 0;\nEmployee.FEMALE = 1;\n\nexport class Dev extends Employee {}\n\nexport class Tester extends Employee {}\n\nexport class ScrumMaster extends Employee {\n  getRandomSalary() {\n    return super.getRandomSalary() + 10000;\n  }\n}\n\nexport class ProductOwner extends Employee {\n  getRandomSalary() {\n    return super.getRandomSalary() + 10000;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}